format_version: "2"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-android-realmtasks.git
  - BRANCH: master

  - GRADLE_TASK: assembleRelease
  - GRADLEW_PATH: "./gradlew"
  - PACKAGE_NAME: "io.bitrise.realmtasks"

  # define these in your .bitrise.secrets.yml
  - SERVICE_ACCOUNT_JSON_KEY_PATH: $SERVICE_ACCOUNT_JSON_KEY_PATH
  - VERSION_CODE: "$VERSION_CODE"
  - TRACK: $TRACK

  - BITRISEIO_GOOGLE_SERVICES_JSON_URL: $BITRISEIO_GOOGLE_SERVICES_JSON_URL

  - BITRISEIO_ANDROID_KEYSTORE_URL: $BITRISEIO_ANDROID_KEYSTORE_URL
  - BITRISEIO_ANDROID_KEYSTORE_PASSWORD: $BITRISEIO_ANDROID_KEYSTORE_PASSWORD
  - BITRISEIO_ANDROID_KEYSTORE_ALIAS: $BITRISEIO_ANDROID_KEYSTORE_ALIAS
  - BITRISEIO_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD: $BITRISEIO_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD

workflows:
  test:
    steps:
    - script:
        inputs:
        - content: stepman audit --step-yml ./step.yml
    - go-list:
    - golint:
    - errcheck:
    - go-test:
    after_run:
    - apk_deploy_test

  apk_deploy_test:
    steps:
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            rm -rf ./_tmp

            if [ ! -d "$ANDROID_HOME/ndk-bundle/toolchains/mips64el-linux-android-4.9" ]
            then
                curl "https://dl.google.com/android/repository/android-ndk-r16b-darwin-x86_64.zip" -o /tmp/ndk.zip
                rm -rf $ANDROID_HOME/ndk-bundle
                unzip -q /tmp/ndk.zip -d $ANDROID_HOME/
                mv $ANDROID_HOME/android-ndk-r16b $ANDROID_HOME/ndk-bundle
                rm -rf /tmp/ndk.zip
                envman add --key "ANDROID_NDK_HOME" --value "$ANDROID_HOME/ndk-bundle"
            fi
    - change-workdir:
        title: Switch working dir to test/_tmp dir
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            if [[ -z "${SAMPLE_APP_URL}" ]]; then
              echo "error: there is no SAMPLE_APP_URL env var specified"
              exit 1
            elif [[ -z "${COMMIT}" && -z "${BRANCH}" ]]; then
              echo "error: can't checkout: there is no BRANCH or COMMIT env var specified"
              exit 1
            fi
            git init
            git remote add origin "${SAMPLE_APP_URL}"
            git fetch || exit 1
            [[ -n "${COMMIT}" ]] && git checkout "${COMMIT}" || git checkout "${BRANCH}"
    - install-missing-android-tools:
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex
            curl -o "./app/google-services.json" "$BITRISEIO_GOOGLE_SERVICES_JSON_URL"
    - change-android-versioncode-and-versionname:
        inputs:
        - build_gradle_path: "./app/build.gradle"
        - new_version_code: $VERSION_CODE
    - gradle-runner:
        inputs:
        - gradle_task: "$GRADLE_TASK"
        - gradlew_path: "$GRADLEW_PATH"
    - sign-apk:
        inputs:
        - apk_path: $BITRISE_APK_PATH_LIST
    - path::./:
        title: Step Test
        inputs:
        - service_account_json_key_path: $SERVICE_ACCOUNT_JSON_KEY_PATH
        - package_name: $PACKAGE_NAME
        - apk_path: $BITRISE_SIGNED_APK_PATH
        - track: $TRACK

  # ----------------------------------------------------------------
  # --- Utility workflows
  dep-update:
    title: Update the locked versions of all dependencies
    steps:
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -x

            go get -u -v github.com/golang/dep/cmd/dep
            dep ensure -update -v
